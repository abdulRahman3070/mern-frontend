{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Mern Stack Project\\\\mern-app\\\\frontend\\\\src\\\\pages\\\\AllProducts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AdminProductCard from '../components/AdminProductCard';\nimport UploadProducts from '../components/UploadProducts';\nimport SummeryApi from '../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllProducts = () => {\n  _s();\n  const [openUploadProducts, setOpenUploadProducts] = useState(false);\n  const [allProduct, setAllProduct] = useState([]);\n  const fetchAllProduct = async () => {\n    try {\n      const response = await fetch(SummeryApi.allProduct.url);\n      const dataResponse = await response.json();\n      if (dataResponse.success) {\n        setAllProduct(dataResponse.data || []);\n      } else {\n        console.error('Failed to fetch products:', dataResponse.message);\n      }\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAllProduct();\n  }, []); // Empty dependency array ensures it runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white py-2 px-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-bold text-lg\",\n        children: \"All Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border-2 border-red-600 text-red-600 py-1 px-3 rounded-full hover:bg-red-600 hover:text-white transition-all\",\n        onClick: () => setOpenUploadProducts(true),\n        children: \"Upload Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center flex-wrap gap-5 py-4 h-[calc(100vh-190px)] overflow-y-scroll\",\n      children: allProduct.map((product, index) => /*#__PURE__*/_jsxDEV(AdminProductCard, {\n        data: product,\n        fetchData: fetchAllProduct\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), openUploadProducts && /*#__PURE__*/_jsxDEV(UploadProducts, {\n      onClose: () => setOpenUploadProducts(false),\n      fetchData: fetchAllProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AllProducts, \"lfRzl+VSXW5h69HaNXMNNzLYUds=\");\n_c = AllProducts;\nexport default AllProducts;\nvar _c;\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"names":["React","useEffect","useState","AdminProductCard","UploadProducts","SummeryApi","jsxDEV","_jsxDEV","AllProducts","_s","openUploadProducts","setOpenUploadProducts","allProduct","setAllProduct","fetchAllProduct","response","fetch","url","dataResponse","json","success","data","console","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","product","index","fetchData","onClose","_c","$RefreshReg$"],"sources":["E:/My Mern Stack Project/mern-app/frontend/src/pages/AllProducts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AdminProductCard from '../components/AdminProductCard';\r\nimport UploadProducts from '../components/UploadProducts'; \r\nimport SummeryApi from '../common'; \r\n\r\n\r\nconst AllProducts = () => {\r\n  const [openUploadProducts, setOpenUploadProducts] = useState(false);\r\n  const [allProduct, setAllProduct] = useState([]);\r\n\r\n  const fetchAllProduct = async () => {\r\n    try {\r\n      const response = await fetch(SummeryApi.allProduct.url);\r\n      const dataResponse = await response.json();\r\n\r\n      if (dataResponse.success) {\r\n        setAllProduct(dataResponse.data || []);\r\n      } else {\r\n        console.error('Failed to fetch products:', dataResponse.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllProduct();\r\n  }, []); // Empty dependency array ensures it runs only once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-white py-2 px-4 flex justify-between items-center\">\r\n        <h2 className=\"font-bold text-lg\">All Products</h2>\r\n        <button\r\n          className=\"border-2 border-red-600 text-red-600 py-1 px-3 rounded-full hover:bg-red-600 hover:text-white transition-all\"\r\n          onClick={() => setOpenUploadProducts(true)}\r\n        >\r\n          Upload Products\r\n        </button>\r\n      </div>\r\n\r\n      {/* All Products */}\r\n      <div className=\"flex items-center flex-wrap gap-5 py-4 h-[calc(100vh-190px)] overflow-y-scroll\">\r\n        {allProduct.map((product, index) => (\r\n          <AdminProductCard data={product} key={index} fetchData={fetchAllProduct} />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Upload product component */}\r\n      {openUploadProducts && <UploadProducts onClose={() => setOpenUploadProducts(false)}  fetchData={fetchAllProduct}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllProducts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,UAAU,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,UAAU,CAACO,UAAU,CAACK,GAAG,CAAC;MACvD,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAE1C,IAAID,YAAY,CAACE,OAAO,EAAE;QACxBP,aAAa,CAACK,YAAY,CAACG,IAAI,IAAI,EAAE,CAAC;MACxC,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEL,YAAY,CAACM,OAAO,CAAC;MAClE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACda,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAKmB,SAAS,EAAC,sDAAsD;MAAAD,QAAA,gBACnElB,OAAA;QAAImB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnDvB,OAAA;QACEmB,SAAS,EAAC,8GAA8G;QACxHK,OAAO,EAAEA,CAAA,KAAMpB,qBAAqB,CAAC,IAAI,CAAE;QAAAc,QAAA,EAC5C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNvB,OAAA;MAAKmB,SAAS,EAAC,gFAAgF;MAAAD,QAAA,EAC5Fb,UAAU,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7B3B,OAAA,CAACJ,gBAAgB;QAACkB,IAAI,EAAEY,OAAQ;QAAaE,SAAS,EAAErB;MAAgB,GAAlCoB,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLpB,kBAAkB,iBAAIH,OAAA,CAACH,cAAc;MAACgC,OAAO,EAAEA,CAAA,KAAMzB,qBAAqB,CAAC,KAAK,CAAE;MAAEwB,SAAS,EAAErB;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/G,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9CID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}